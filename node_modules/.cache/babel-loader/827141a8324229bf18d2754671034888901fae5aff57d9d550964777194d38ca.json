{"ast":null,"code":"var _jsxFileName = \"/Users/madhug/Downloads/msr/ReactProjects/cafeteria/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, TextField, Button } from '@mui/material';\nimport MultiSelectDropdown from './components/MultiSelectDropdown';\nimport PreviewList from './components/PreviewList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [items, setItems] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [preview, setPreview] = useState([]);\n  const [grandTotal, setGrandTotal] = useState(0);\n  const [editUserId, setEditUserId] = useState(null);\n  useEffect(() => {\n    fetch('/users.json').then(response => response.json()).then(data => setUsers(data));\n    fetch('/items.json').then(response => response.json()).then(data => setItems(data));\n  }, []);\n  const handleSave = () => {\n    let newPreview = [...preview];\n    selectedUsers.forEach(user => {\n      const existingUserIndex = newPreview.findIndex(p => p.user === user);\n      const userItems = selectedItems.map(item => items.find(i => i.id === item));\n      const total = userItems.reduce((sum, item) => sum + item.price, 0);\n      if (existingUserIndex !== -1) {\n        // If user already exists in the preview, update their items and total\n        newPreview[existingUserIndex].items = userItems;\n        newPreview[existingUserIndex].total = total;\n      } else {\n        // If user does not exist, add them to the preview list\n        newPreview.push({\n          user,\n          items: userItems,\n          total\n        });\n      }\n    });\n    setPreview(newPreview);\n    setSelectedUsers([]);\n    setSelectedItems([]);\n\n    // Update the grand total\n    const grandTotal = newPreview.reduce((sum, {\n      total\n    }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n  /*const handleSave = () => {\n    const newPreview = selectedUsers.map(user => {\n      const userItems = selectedItems.map(item => items.find(i => i.id === item));\n      const total = userItems.reduce((sum, item) => sum + item.price, 0);\n      return { user, items: userItems, total };\n    });\n     if (editUserId !== null) {\n      const updatedPreview = preview.map(p => \n        p.user === editUserId ? \n          { user: editUserId, items: selectedItems.map(itemId => items.find(i => i.id === itemId)), total: selectedItems.reduce((sum, itemId) => sum + items.find(i => i.id === itemId).price, 0) } \n          : p\n      );\n      setPreview(updatedPreview);\n      setEditUserId(null);\n    } else {\n      for (const user of selectedUsers) {\n        if (preview.find(p => p.user === user)) {\n          alert(`User ${users.find(u => u.id === user).name} is already in the list. Please edit or delete the user.`);\n          return;\n        }\n      }\n      setPreview([...preview, ...newPreview]);\n    }\n     setSelectedUsers([]);\n    setSelectedItems([]);\n    const grandTotal = preview.reduce((sum, { total }) => sum + total, 0) + newPreview.reduce((sum, { total }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n  */\n  const handleEdit = user => {\n    const userPreview = preview.find(p => p.user === user);\n    setSelectedUsers([user]);\n    setSelectedItems(userPreview.items.map(item => item.id));\n    setEditUserId(user);\n  };\n  const handleDelete = user => {\n    const newPreview = preview.filter(p => p.user !== user);\n    setPreview(newPreview);\n    const grandTotal = newPreview.reduce((sum, {\n      total\n    }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cafeteria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Grand Total: \", grandTotal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectDropdown, {\n      label: \"Select Users\",\n      options: users,\n      selectedValues: selectedUsers,\n      setSelectedValues: setSelectedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectDropdown, {\n      label: \"Select Food Items\",\n      options: items,\n      selectedValues: selectedItems,\n      setSelectedValues: setSelectedItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSave,\n      children: editUserId !== null ? 'Update' : 'Save'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PreviewList, {\n      preview: preview,\n      users: users,\n      handleEdit: handleEdit,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AeggbtQAdKM9tnYt6EJJxnQuK3M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","TextField","Button","MultiSelectDropdown","PreviewList","jsxDEV","_jsxDEV","App","_s","users","setUsers","items","setItems","selectedUsers","setSelectedUsers","selectedItems","setSelectedItems","preview","setPreview","grandTotal","setGrandTotal","editUserId","setEditUserId","fetch","then","response","json","data","handleSave","newPreview","forEach","user","existingUserIndex","findIndex","p","userItems","map","item","find","i","id","total","reduce","sum","price","push","handleEdit","userPreview","handleDelete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","label","options","selectedValues","setSelectedValues","variant","color","onClick","_c","$RefreshReg$"],"sources":["/Users/madhug/Downloads/msr/ReactProjects/cafeteria/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, TextField, Button } from '@mui/material';\nimport MultiSelectDropdown from './components/MultiSelectDropdown';\nimport PreviewList from './components/PreviewList';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [items, setItems] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [preview, setPreview] = useState([]);\n  const [grandTotal, setGrandTotal] = useState(0);\n  const [editUserId, setEditUserId] = useState(null);\n\n  useEffect(() => {\n    fetch('/users.json')\n      .then(response => response.json())\n      .then(data => setUsers(data));\n    \n    fetch('/items.json')\n      .then(response => response.json())\n      .then(data => setItems(data));\n  }, []);\n\n  const handleSave = () => {\n    let newPreview = [...preview];\n  \n    selectedUsers.forEach(user => {\n      const existingUserIndex = newPreview.findIndex(p => p.user === user);\n  \n      const userItems = selectedItems.map(item => items.find(i => i.id === item));\n      const total = userItems.reduce((sum, item) => sum + item.price, 0);\n  \n      if (existingUserIndex !== -1) {\n        // If user already exists in the preview, update their items and total\n        newPreview[existingUserIndex].items = userItems;\n        newPreview[existingUserIndex].total = total;\n      } else {\n        // If user does not exist, add them to the preview list\n        newPreview.push({ user, items: userItems, total });\n      }\n    });\n  \n    setPreview(newPreview);\n    setSelectedUsers([]);\n    setSelectedItems([]);\n  \n    // Update the grand total\n    const grandTotal = newPreview.reduce((sum, { total }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n  /*const handleSave = () => {\n    const newPreview = selectedUsers.map(user => {\n      const userItems = selectedItems.map(item => items.find(i => i.id === item));\n      const total = userItems.reduce((sum, item) => sum + item.price, 0);\n      return { user, items: userItems, total };\n    });\n\n    if (editUserId !== null) {\n      const updatedPreview = preview.map(p => \n        p.user === editUserId ? \n          { user: editUserId, items: selectedItems.map(itemId => items.find(i => i.id === itemId)), total: selectedItems.reduce((sum, itemId) => sum + items.find(i => i.id === itemId).price, 0) } \n          : p\n      );\n      setPreview(updatedPreview);\n      setEditUserId(null);\n    } else {\n      for (const user of selectedUsers) {\n        if (preview.find(p => p.user === user)) {\n          alert(`User ${users.find(u => u.id === user).name} is already in the list. Please edit or delete the user.`);\n          return;\n        }\n      }\n      setPreview([...preview, ...newPreview]);\n    }\n\n    setSelectedUsers([]);\n    setSelectedItems([]);\n    const grandTotal = preview.reduce((sum, { total }) => sum + total, 0) + newPreview.reduce((sum, { total }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n*/\n  const handleEdit = (user) => {\n    const userPreview = preview.find(p => p.user === user);\n    setSelectedUsers([user]);\n    setSelectedItems(userPreview.items.map(item => item.id));\n    setEditUserId(user);\n  };\n\n  const handleDelete = (user) => {\n    const newPreview = preview.filter(p => p.user !== user);\n    setPreview(newPreview);\n    const grandTotal = newPreview.reduce((sum, { total }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n\n  return (\n    <Container>\n      <h1>Cafeteria</h1>\n      <h3>Grand Total: {grandTotal}</h3>\n      <MultiSelectDropdown\n        label=\"Select Users\"\n        options={users}\n        selectedValues={selectedUsers}\n        setSelectedValues={setSelectedUsers}\n      />\n      <MultiSelectDropdown\n        label=\"Select Food Items\"\n        options={items}\n        selectedValues={selectedItems}\n        setSelectedValues={setSelectedItems}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\n        {editUserId !== null ? 'Update' : 'Save'}\n      </Button>\n      <PreviewList\n        preview={preview}\n        users={users}\n        handleEdit={handleEdit}\n        handleDelete={handleDelete}\n      />\n      \n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
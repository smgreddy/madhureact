{"ast":null,"code":"var _jsxFileName = \"/Users/madhug/Downloads/msr/ReactProjects/cafeteria/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, TextField, Button } from '@mui/material';\nimport MultiSelectDropdown from './components/MultiSelectDropdown';\nimport PreviewList from './components/PreviewList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [totalAmount, setTotalAmount] = useState(500);\n  const [users, setUsers] = useState([]);\n  const [items, setItems] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [preview, setPreview] = useState([]);\n  const [grandTotal, setGrandTotal] = useState(0);\n  useEffect(() => {\n    fetch('/users.json').then(response => response.json()).then(data => setUsers(data));\n    fetch('/items.json').then(response => response.json()).then(data => setItems(data));\n  }, []);\n  const handleSave = () => {\n    let newPreview = [...preview];\n    selectedUsers.forEach(user => {\n      const existingUserIndex = newPreview.findIndex(p => p.user === user);\n      const newItems = selectedItems.map(item => items.find(i => i.id === item));\n      if (existingUserIndex !== -1) {\n        // User exists: Update items based on current selection\n        let existingItems = [...newPreview[existingUserIndex].items];\n        newItems.forEach(newItem => {\n          const existingItemIndex = existingItems.findIndex(item => item.id === newItem.id);\n          if (existingItemIndex !== -1) {\n            // If the item already exists, increase its quantity\n            existingItems[existingItemIndex] = {\n              ...existingItems[existingItemIndex],\n              quantity: existingItems[existingItemIndex].quantity + 1\n            };\n          } else {\n            // If the item is new, add it with quantity 1\n            existingItems.push({\n              ...newItem,\n              quantity: 1\n            });\n          }\n        });\n\n        /*// Filter out deselected items\n        existingItems = existingItems.filter(item =>\n          selectedItems.includes(item.id)\n        );*/\n\n        // Calculate updated total (price * quantity)\n        const updatedTotal = existingItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n        newPreview[existingUserIndex] = {\n          ...newPreview[existingUserIndex],\n          items: existingItems,\n          total: updatedTotal\n        };\n      } else {\n        // User does not exist: Add as new entry with quantity 1\n        const itemsWithQuantity = newItems.map(item => ({\n          ...item,\n          quantity: 1\n        }));\n        const total = itemsWithQuantity.reduce((sum, item) => sum + item.price * item.quantity, 0);\n        newPreview.push({\n          user,\n          items: itemsWithQuantity,\n          total\n        });\n      }\n    });\n    setPreview(newPreview);\n    setSelectedUsers([]);\n    setSelectedItems([]);\n\n    // Update the grand total\n    const grandTotal = newPreview.reduce((sum, {\n      total\n    }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n  const handleEdit = user => {\n    const userPreview = preview.find(p => p.user === user);\n    if (userPreview) {\n      setSelectedUsers([user]);\n      setSelectedItems(userPreview.items.map(item => item.id));\n    }\n  };\n  const handleDelete = user => {\n    const newPreview = preview.filter(p => p.user !== user);\n    setPreview(newPreview);\n    const grandTotal = newPreview.reduce((sum, {\n      total\n    }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cafeteria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Total Amount\",\n      type: \"number\",\n      value: totalAmount,\n      onChange: e => setTotalAmount(e.target.value),\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectDropdown, {\n      label: \"Select Users\",\n      options: users,\n      selectedValues: selectedUsers,\n      setSelectedValues: setSelectedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectDropdown, {\n      label: \"Select Food Items\",\n      options: items,\n      selectedValues: selectedItems,\n      setSelectedValues: setSelectedItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PreviewList, {\n      preview: preview,\n      users: users,\n      handleEdit: handleEdit,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Grand Total: \", grandTotal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mAah+MhfVWhySZG32snlmWYsI7w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","TextField","Button","MultiSelectDropdown","PreviewList","jsxDEV","_jsxDEV","App","_s","totalAmount","setTotalAmount","users","setUsers","items","setItems","selectedUsers","setSelectedUsers","selectedItems","setSelectedItems","preview","setPreview","grandTotal","setGrandTotal","fetch","then","response","json","data","handleSave","newPreview","forEach","user","existingUserIndex","findIndex","p","newItems","map","item","find","i","id","existingItems","newItem","existingItemIndex","quantity","push","updatedTotal","reduce","sum","price","total","itemsWithQuantity","handleEdit","userPreview","handleDelete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","label","type","value","onChange","e","target","fullWidth","margin","options","selectedValues","setSelectedValues","variant","color","onClick","_c","$RefreshReg$"],"sources":["/Users/madhug/Downloads/msr/ReactProjects/cafeteria/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, TextField, Button } from '@mui/material';\nimport MultiSelectDropdown from './components/MultiSelectDropdown';\nimport PreviewList from './components/PreviewList';\n\nfunction App() {\n  const [totalAmount, setTotalAmount] = useState(500);\n  const [users, setUsers] = useState([]);\n  const [items, setItems] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [preview, setPreview] = useState([]);\n  const [grandTotal, setGrandTotal] = useState(0);\n\n  useEffect(() => {\n    fetch('/users.json')\n      .then(response => response.json())\n      .then(data => setUsers(data));\n    \n    fetch('/items.json')\n      .then(response => response.json())\n      .then(data => setItems(data));\n  }, []);\n\nconst handleSave = () => {\n  let newPreview = [...preview];\n\n  selectedUsers.forEach(user => {\n    const existingUserIndex = newPreview.findIndex(p => p.user === user);\n\n    const newItems = selectedItems.map(item => items.find(i => i.id === item));\n\n    if (existingUserIndex !== -1) {\n      // User exists: Update items based on current selection\n      let existingItems = [...newPreview[existingUserIndex].items];\n\n      newItems.forEach(newItem => {\n        const existingItemIndex = existingItems.findIndex(item => item.id === newItem.id);\n\n        if (existingItemIndex !== -1) {\n          // If the item already exists, increase its quantity\n          existingItems[existingItemIndex] = {\n            ...existingItems[existingItemIndex],\n            quantity: existingItems[existingItemIndex].quantity + 1,\n          };\n        } else {\n          // If the item is new, add it with quantity 1\n          existingItems.push({ ...newItem, quantity: 1 });\n        }\n      });\n\n      /*// Filter out deselected items\n      existingItems = existingItems.filter(item =>\n        selectedItems.includes(item.id)\n      );*/\n\n      // Calculate updated total (price * quantity)\n      const updatedTotal = existingItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n\n      newPreview[existingUserIndex] = {\n        ...newPreview[existingUserIndex],\n        items: existingItems,\n        total: updatedTotal,\n      };\n    } else {\n      // User does not exist: Add as new entry with quantity 1\n      const itemsWithQuantity = newItems.map(item => ({ ...item, quantity: 1 }));\n      const total = itemsWithQuantity.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n      newPreview.push({ user, items: itemsWithQuantity, total });\n    }\n  });\n\n  setPreview(newPreview);\n  setSelectedUsers([]);\n  setSelectedItems([]);\n\n  // Update the grand total\n  const grandTotal = newPreview.reduce((sum, { total }) => sum + total, 0);\n  setGrandTotal(grandTotal);\n};\n\n  \n  const handleEdit = (user) => {\n    const userPreview = preview.find(p => p.user === user);\n\n    if (userPreview) {\n      setSelectedUsers([user]);\n      setSelectedItems(userPreview.items.map(item => item.id));\n    }\n  };\n\n  const handleDelete = (user) => {\n    const newPreview = preview.filter(p => p.user !== user);\n    setPreview(newPreview);\n    const grandTotal = newPreview.reduce((sum, { total }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n\n  return (\n    <Container>\n      <h1>Cafeteria</h1>\n      <TextField\n        label=\"Total Amount\"\n        type=\"number\"\n        value={totalAmount}\n        onChange={(e) => setTotalAmount(e.target.value)}\n        fullWidth\n        margin=\"normal\"\n      />\n      <MultiSelectDropdown\n        label=\"Select Users\"\n        options={users}\n        selectedValues={selectedUsers}\n        setSelectedValues={setSelectedUsers}\n      />\n      <MultiSelectDropdown\n        label=\"Select Food Items\"\n        options={items}\n        selectedValues={selectedItems}\n        setSelectedValues={setSelectedItems}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\n        Save\n      </Button>\n      <PreviewList\n        preview={preview}\n        users={users}\n        handleEdit={handleEdit}\n        handleDelete={handleDelete}\n      />\n      <h3>Grand Total: {grandTotal}</h3>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAC5D,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EACnD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACdwB,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIf,QAAQ,CAACe,IAAI,CAAC,CAAC;IAE/BJ,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIb,QAAQ,CAACa,IAAI,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAER,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIC,UAAU,GAAG,CAAC,GAAGV,OAAO,CAAC;IAE7BJ,aAAa,CAACe,OAAO,CAACC,IAAI,IAAI;MAC5B,MAAMC,iBAAiB,GAAGH,UAAU,CAACI,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC;MAEpE,MAAMI,QAAQ,GAAGlB,aAAa,CAACmB,GAAG,CAACC,IAAI,IAAIxB,KAAK,CAACyB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,IAAI,CAAC,CAAC;MAE1E,IAAIL,iBAAiB,KAAK,CAAC,CAAC,EAAE;QAC5B;QACA,IAAIS,aAAa,GAAG,CAAC,GAAGZ,UAAU,CAACG,iBAAiB,CAAC,CAACnB,KAAK,CAAC;QAE5DsB,QAAQ,CAACL,OAAO,CAACY,OAAO,IAAI;UAC1B,MAAMC,iBAAiB,GAAGF,aAAa,CAACR,SAAS,CAACI,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKE,OAAO,CAACF,EAAE,CAAC;UAEjF,IAAIG,iBAAiB,KAAK,CAAC,CAAC,EAAE;YAC5B;YACAF,aAAa,CAACE,iBAAiB,CAAC,GAAG;cACjC,GAAGF,aAAa,CAACE,iBAAiB,CAAC;cACnCC,QAAQ,EAAEH,aAAa,CAACE,iBAAiB,CAAC,CAACC,QAAQ,GAAG;YACxD,CAAC;UACH,CAAC,MAAM;YACL;YACAH,aAAa,CAACI,IAAI,CAAC;cAAE,GAAGH,OAAO;cAAEE,QAAQ,EAAE;YAAE,CAAC,CAAC;UACjD;QACF,CAAC,CAAC;;QAEF;AACN;AACA;AACA;;QAEM;QACA,MAAME,YAAY,GAAGL,aAAa,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEX,IAAI,KAAKW,GAAG,GAAIX,IAAI,CAACY,KAAK,GAAGZ,IAAI,CAACO,QAAS,EAAE,CAAC,CAAC;QAE/Ff,UAAU,CAACG,iBAAiB,CAAC,GAAG;UAC9B,GAAGH,UAAU,CAACG,iBAAiB,CAAC;UAChCnB,KAAK,EAAE4B,aAAa;UACpBS,KAAK,EAAEJ;QACT,CAAC;MACH,CAAC,MAAM;QACL;QACA,MAAMK,iBAAiB,GAAGhB,QAAQ,CAACC,GAAG,CAACC,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC,CAAC;QAC1E,MAAMM,KAAK,GAAGC,iBAAiB,CAACJ,MAAM,CAAC,CAACC,GAAG,EAAEX,IAAI,KAAKW,GAAG,GAAIX,IAAI,CAACY,KAAK,GAAGZ,IAAI,CAACO,QAAS,EAAE,CAAC,CAAC;QAC5Ff,UAAU,CAACgB,IAAI,CAAC;UAAEd,IAAI;UAAElB,KAAK,EAAEsC,iBAAiB;UAAED;QAAM,CAAC,CAAC;MAC5D;IACF,CAAC,CAAC;IAEF9B,UAAU,CAACS,UAAU,CAAC;IACtBb,gBAAgB,CAAC,EAAE,CAAC;IACpBE,gBAAgB,CAAC,EAAE,CAAC;;IAEpB;IACA,MAAMG,UAAU,GAAGQ,UAAU,CAACkB,MAAM,CAAC,CAACC,GAAG,EAAE;MAAEE;IAAM,CAAC,KAAKF,GAAG,GAAGE,KAAK,EAAE,CAAC,CAAC;IACxE5B,aAAa,CAACD,UAAU,CAAC;EAC3B,CAAC;EAGC,MAAM+B,UAAU,GAAIrB,IAAI,IAAK;IAC3B,MAAMsB,WAAW,GAAGlC,OAAO,CAACmB,IAAI,CAACJ,CAAC,IAAIA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC;IAEtD,IAAIsB,WAAW,EAAE;MACfrC,gBAAgB,CAAC,CAACe,IAAI,CAAC,CAAC;MACxBb,gBAAgB,CAACmC,WAAW,CAACxC,KAAK,CAACuB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,EAAE,CAAC,CAAC;IAC1D;EACF,CAAC;EAED,MAAMc,YAAY,GAAIvB,IAAI,IAAK;IAC7B,MAAMF,UAAU,GAAGV,OAAO,CAACoC,MAAM,CAACrB,CAAC,IAAIA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC;IACvDX,UAAU,CAACS,UAAU,CAAC;IACtB,MAAMR,UAAU,GAAGQ,UAAU,CAACkB,MAAM,CAAC,CAACC,GAAG,EAAE;MAAEE;IAAM,CAAC,KAAKF,GAAG,GAAGE,KAAK,EAAE,CAAC,CAAC;IACxE5B,aAAa,CAACD,UAAU,CAAC;EAC3B,CAAC;EAED,oBACEf,OAAA,CAACN,SAAS;IAAAwD,QAAA,gBACRlD,OAAA;MAAAkD,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtD,OAAA,CAACL,SAAS;MACR4D,KAAK,EAAC,cAAc;MACpBC,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAEtD,WAAY;MACnBuD,QAAQ,EAAGC,CAAC,IAAKvD,cAAc,CAACuD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,SAAS;MACTC,MAAM,EAAC;IAAQ;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACFtD,OAAA,CAACH,mBAAmB;MAClB0D,KAAK,EAAC,cAAc;MACpBQ,OAAO,EAAE1D,KAAM;MACf2D,cAAc,EAAEvD,aAAc;MAC9BwD,iBAAiB,EAAEvD;IAAiB;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACFtD,OAAA,CAACH,mBAAmB;MAClB0D,KAAK,EAAC,mBAAmB;MACzBQ,OAAO,EAAExD,KAAM;MACfyD,cAAc,EAAErD,aAAc;MAC9BsD,iBAAiB,EAAErD;IAAiB;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACFtD,OAAA,CAACJ,MAAM;MAACsE,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAE9C,UAAW;MAAA4B,QAAA,EAAC;IAEjE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtD,OAAA,CAACF,WAAW;MACVe,OAAO,EAAEA,OAAQ;MACjBR,KAAK,EAAEA,KAAM;MACbyC,UAAU,EAAEA,UAAW;MACvBE,YAAY,EAAEA;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFtD,OAAA;MAAAkD,QAAA,GAAI,eAAa,EAACnC,UAAU;IAAA;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEhB;AAACpD,EAAA,CAhIQD,GAAG;AAAAoE,EAAA,GAAHpE,GAAG;AAkIZ,eAAeA,GAAG;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
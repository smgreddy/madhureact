{"ast":null,"code":"var _jsxFileName = \"/Users/madhug/Downloads/msr/ReactProjects/cafeteria/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, TextField, Button } from '@mui/material';\nimport MultiSelectDropdown from './components/MultiSelectDropdown';\nimport PreviewList from './components/PreviewList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [totalAmount, setTotalAmount] = useState(500);\n  const [users, setUsers] = useState([]);\n  const [items, setItems] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [preview, setPreview] = useState([]);\n  const [grandTotal, setGrandTotal] = useState(0);\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    fetch('/users.json').then(response => response.json()).then(data => setUsers(data));\n    fetch('/items.json').then(response => response.json()).then(data => setItems(data));\n  }, []);\n  const handleSave = () => {\n    let newPreview = [...preview];\n    selectedUsers.forEach(user => {\n      const existingUserIndex = newPreview.findIndex(p => p.user === user);\n      const newItems = selectedItems.map(itemId => {\n        const item = items.find(i => i.id === itemId);\n        return {\n          ...item,\n          quantity: 1\n        }; // Initial quantity is 1\n      });\n      if (isEditing && existingUserIndex !== -1) {\n        // Editing existing user\n        let existingItems = [...newPreview[existingUserIndex].items];\n\n        // Merge the new selected items with existing ones\n        newItems.forEach(newItem => {\n          const existingItemIndex = existingItems.findIndex(item => item.id === newItem.id);\n          if (existingItemIndex !== -1) {\n            // If the item already exists, update its quantity\n            existingItems[existingItemIndex].quantity += 1;\n          } else {\n            // If the item is new, add it\n            existingItems.push(newItem);\n          }\n        });\n\n        // Filter out deselected items\n        existingItems = existingItems.filter(item => selectedItems.includes(item.id));\n\n        // Calculate updated total\n        const updatedTotal = existingItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n\n        // Update the user entry in the preview list\n        newPreview[existingUserIndex] = {\n          ...newPreview[existingUserIndex],\n          items: existingItems,\n          total: updatedTotal\n        };\n      } else {\n        // Adding new user\n        const total = newItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n        newPreview.push({\n          user,\n          items: newItems,\n          total\n        });\n      }\n    });\n\n    // Update the preview state\n    setPreview(newPreview);\n\n    // Clear selections and editing state\n    setSelectedUsers([]);\n    setSelectedItems([]);\n    setIsEditing(false);\n    setEditingUser(null);\n\n    // Update the grand total\n    const grandTotal = newPreview.reduce((sum, {\n      total\n    }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n  const handleSaveOld = () => {\n    let newPreview = [...preview];\n    console.log(\"newPreview ==== \", newPreview);\n    console.log(\"selectedUsers ==== \", selectedUsers);\n    selectedUsers.forEach(user => {\n      console.log(\"user ==== \", user);\n      const existingUserIndex = newPreview.findIndex(p => p.user === user);\n      const newItems = selectedItems.map(item => items.find(i => i.id === item));\n      if (existingUserIndex !== -1) {\n        // User exists: Update items based on current selection\n        let existingItems = [...newPreview[existingUserIndex].items];\n        newItems.forEach(newItem => {\n          const existingItemIndex = existingItems.findIndex(item => item.id === newItem.id);\n          if (existingItemIndex !== -1) {\n            // If the item already exists, increase its quantity\n            existingItems[existingItemIndex] = {\n              ...existingItems[existingItemIndex],\n              quantity: existingItems[existingItemIndex].quantity + 1\n            };\n          } else {\n            // If the item is new, add it with quantity 1\n            existingItems.push({\n              ...newItem,\n              quantity: 1\n            });\n          }\n        });\n        alert(\"Before := \" + JSON.stringify(existingItems));\n\n        // Filter out deselected items\n        if (isEditing) {\n          existingItems = existingItems.filter(item => selectedItems.includes(item.id));\n          setIsEditing(false);\n        }\n\n        // Calculate updated total (price * quantity)\n        const updatedTotal = existingItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n        alert(\"After := \" + JSON.stringify(existingItems));\n        newPreview[existingUserIndex] = {\n          ...newPreview[existingUserIndex],\n          items: existingItems,\n          total: updatedTotal\n        };\n      } else {\n        // User does not exist: Add as new entry with quantity 1\n        const itemsWithQuantity = newItems.map(item => ({\n          ...item,\n          quantity: 1\n        }));\n        const total = itemsWithQuantity.reduce((sum, item) => sum + item.price * item.quantity, 0);\n        newPreview.push({\n          user,\n          items: itemsWithQuantity,\n          total\n        });\n        console.log(\"newPreview.push ==== \", newPreview);\n      }\n    });\n    setPreview(newPreview);\n    setSelectedUsers([]);\n    setSelectedItems([]);\n\n    // Update the grand total\n    const grandTotal = newPreview.reduce((sum, {\n      total\n    }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n  const handleEdit = user => {\n    setIsEditing(true);\n    const userPreview = preview.find(p => p.user === user);\n    if (userPreview) {\n      setSelectedUsers([user]);\n      setSelectedItems(userPreview.items.map(item => item.id));\n    }\n  };\n  const handleDelete = user => {\n    const newPreview = preview.filter(p => p.user !== user);\n    setPreview(newPreview);\n    const grandTotal = newPreview.reduce((sum, {\n      total\n    }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cafeteria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectDropdown, {\n      label: \"Select Users\",\n      options: users,\n      selectedValues: selectedUsers,\n      setSelectedValues: setSelectedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectDropdown, {\n      label: \"Select Food Items\",\n      options: items,\n      selectedValues: selectedItems,\n      setSelectedValues: setSelectedItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PreviewList, {\n      preview: preview,\n      users: users,\n      handleEdit: handleEdit,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Grand Total: \", grandTotal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QKvSW/o0OAknbDsM746iMS5X52s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","TextField","Button","MultiSelectDropdown","PreviewList","jsxDEV","_jsxDEV","App","_s","totalAmount","setTotalAmount","users","setUsers","items","setItems","selectedUsers","setSelectedUsers","selectedItems","setSelectedItems","preview","setPreview","grandTotal","setGrandTotal","isEditing","setIsEditing","fetch","then","response","json","data","handleSave","newPreview","forEach","user","existingUserIndex","findIndex","p","newItems","map","itemId","item","find","i","id","quantity","existingItems","newItem","existingItemIndex","push","filter","includes","updatedTotal","reduce","sum","price","total","setEditingUser","handleSaveOld","console","log","alert","JSON","stringify","itemsWithQuantity","handleEdit","userPreview","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","label","options","selectedValues","setSelectedValues","variant","color","onClick","_c","$RefreshReg$"],"sources":["/Users/madhug/Downloads/msr/ReactProjects/cafeteria/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, TextField, Button } from '@mui/material';\nimport MultiSelectDropdown from './components/MultiSelectDropdown';\nimport PreviewList from './components/PreviewList';\n\nfunction App() {\n  const [totalAmount, setTotalAmount] = useState(500);\n  const [users, setUsers] = useState([]);\n  const [items, setItems] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [preview, setPreview] = useState([]);\n  const [grandTotal, setGrandTotal] = useState(0);\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    fetch('/users.json')\n      .then(response => response.json())\n      .then(data => setUsers(data));\n    \n    fetch('/items.json')\n      .then(response => response.json())\n      .then(data => setItems(data));\n  }, []);\n\n  const handleSave = () => {\n    let newPreview = [...preview];\n  \n    selectedUsers.forEach(user => {\n      const existingUserIndex = newPreview.findIndex(p => p.user === user);\n  \n      const newItems = selectedItems.map(itemId => {\n        const item = items.find(i => i.id === itemId);\n        return { ...item, quantity: 1 }; // Initial quantity is 1\n      });\n  \n      if (isEditing && existingUserIndex !== -1) {\n        // Editing existing user\n        let existingItems = [...newPreview[existingUserIndex].items];\n  \n        // Merge the new selected items with existing ones\n        newItems.forEach(newItem => {\n          const existingItemIndex = existingItems.findIndex(item => item.id === newItem.id);\n  \n          if (existingItemIndex !== -1) {\n            // If the item already exists, update its quantity\n            existingItems[existingItemIndex].quantity += 1;\n          } else {\n            // If the item is new, add it\n            existingItems.push(newItem);\n          }\n        });\n  \n        // Filter out deselected items\n        existingItems = existingItems.filter(item => selectedItems.includes(item.id));\n  \n        // Calculate updated total\n        const updatedTotal = existingItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n  \n        // Update the user entry in the preview list\n        newPreview[existingUserIndex] = {\n          ...newPreview[existingUserIndex],\n          items: existingItems,\n          total: updatedTotal,\n        };\n      } else {\n        // Adding new user\n        const total = newItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n        newPreview.push({ user, items: newItems, total });\n      }\n    });\n  \n    // Update the preview state\n    setPreview(newPreview);\n  \n    // Clear selections and editing state\n    setSelectedUsers([]);\n    setSelectedItems([]);\n    setIsEditing(false);\n    setEditingUser(null);\n  \n    // Update the grand total\n    const grandTotal = newPreview.reduce((sum, { total }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n  \nconst handleSaveOld = () => {\n  let newPreview = [...preview];\nconsole.log(\"newPreview ==== \",newPreview)\nconsole.log(\"selectedUsers ==== \",selectedUsers)\n\n  selectedUsers.forEach(user => {\n    console.log(\"user ==== \",user)\n\n    const existingUserIndex = newPreview.findIndex(p => p.user === user);\n\n    const newItems = selectedItems.map(item => items.find(i => i.id === item));\n\n    if (existingUserIndex !== -1) {\n      // User exists: Update items based on current selection\n      let existingItems = [...newPreview[existingUserIndex].items];\n      newItems.forEach(newItem => {\n        const existingItemIndex = existingItems.findIndex(item => item.id === newItem.id);\n\n        if (existingItemIndex !== -1) {\n          // If the item already exists, increase its quantity\n          existingItems[existingItemIndex] = {\n            ...existingItems[existingItemIndex],\n            quantity: existingItems[existingItemIndex].quantity + 1,\n          };\n\n        } else {\n          // If the item is new, add it with quantity 1\n          existingItems.push({ ...newItem, quantity: 1 });\n        }\n      });\n      alert (\"Before := \"+JSON.stringify(existingItems)); \n\n      // Filter out deselected items\n      if (isEditing) {\n        existingItems = existingItems.filter(item =>\n          selectedItems.includes(item.id)\n        );\n        setIsEditing(false)\n      }\n\n      // Calculate updated total (price * quantity)\n      const updatedTotal = existingItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n      alert (\"After := \"+JSON.stringify(existingItems)); \n\n      newPreview[existingUserIndex] = {\n        ...newPreview[existingUserIndex],\n        items: existingItems,\n        total: updatedTotal,\n      };\n    } else {\n      // User does not exist: Add as new entry with quantity 1\n      const itemsWithQuantity = newItems.map(item => ({ ...item, quantity: 1 }));\n      const total = itemsWithQuantity.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n      newPreview.push({ user, items: itemsWithQuantity, total });\n\n      console.log(\"newPreview.push ==== \",newPreview)\n\n    }\n  });\n\n  setPreview(newPreview);\n  setSelectedUsers([]);\n  setSelectedItems([]);\n\n  // Update the grand total\n  const grandTotal = newPreview.reduce((sum, { total }) => sum + total, 0);\n  setGrandTotal(grandTotal);\n};\n  \n  const handleEdit = (user) => {\n    setIsEditing(true)\n    const userPreview = preview.find(p => p.user === user);\n\n    if (userPreview) {\n      setSelectedUsers([user]);\n      setSelectedItems(userPreview.items.map(item => item.id));\n    }\n  };\n\n  const handleDelete = (user) => {\n    const newPreview = preview.filter(p => p.user !== user);\n    setPreview(newPreview);\n    const grandTotal = newPreview.reduce((sum, { total }) => sum + total, 0);\n    setGrandTotal(grandTotal);\n  };\n\n  return (\n    <Container>\n      <h1>Cafeteria</h1>\n      \n      <MultiSelectDropdown\n        label=\"Select Users\"\n        options={users}\n        selectedValues={selectedUsers}\n        setSelectedValues={setSelectedUsers}\n      />\n      <MultiSelectDropdown\n        label=\"Select Food Items\"\n        options={items}\n        selectedValues={selectedItems}\n        setSelectedValues={setSelectedItems}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\n        Save\n      </Button>\n      <PreviewList\n        preview={preview}\n        users={users}\n        handleEdit={handleEdit}\n        handleDelete={handleDelete}\n      />\n      <h3>Grand Total: {grandTotal}</h3>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}